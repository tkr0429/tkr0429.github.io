<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>tkr0429 blog</title><link href="http://tkr0429.github.io/" rel="alternate"></link><link href="http://tkr0429.github.io/feeds/tkr0429.atom.xml" rel="self"></link><id>http://tkr0429.github.io/</id><updated>2015-08-23T19:00:00+09:00</updated><entry><title>YAPC::Asia 2015 Tokyoに行った話</title><link href="http://tkr0429.github.io/2015/08/yapc-asia2015/" rel="alternate"></link><updated>2015-08-23T19:00:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2015-08-23:2015/08/yapc-asia2015/</id><summary type="html">
&lt;h1 id="yapcasia-2015-tokyo"&gt;YAPC::Asia 2015 Tokyo&lt;/h1&gt;
&lt;p&gt;昨年初めて参加させて頂いて、今年も是非!!と思っていたので参加してきました。
前々から今年でYAPC::Asiaは最後です。と聞いていたので是が非でもと思っていた。&lt;/p&gt;
&lt;p&gt;社内に引き篭もってると市場動向もわからなくなるし、
井の中の蛙になってしまう。&lt;/p&gt;
&lt;h3 id="_1"&gt;ざっくり感想を。&lt;/h3&gt;
&lt;p&gt;インフラエンジニアな自分としてはconsul,stretcherは抑えておきたいなと。
特にconsulのDNS機能を内部DNSとして使ってる事例を多く見かけて大変興味をそそられた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://yapcasia.org/2015/talk/show/53aacc02-faca-11e4-8c2e-8ab37d574c3a"&gt;辛いことをやめる！から始まる業務改善とInfrastructure as Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自分が抱えてる悩みに近いものがあり、すごく良い話を聞けた。&lt;/p&gt;
&lt;p&gt;なかなか社外の方と交流することも少ないので、
凄く刺激になるし自分も日々精進していかないと行けないなと
モチベーションを取り戻すきっかけにもなります。&lt;/p&gt;
&lt;h3 id="_2"&gt;最後に&lt;/h3&gt;
&lt;p&gt;YAPC::Asia 楽しかったです。
スピーカーをはじめ運営のみなさま、お疲れ様でした。
そして、ありがとうございました。&lt;/p&gt;</summary><category term="perl"></category></entry><entry><title>l2tp/ipsecでremote-access</title><link href="http://tkr0429.github.io/2015/03/l2tpipsec/" rel="alternate"></link><updated>2015-03-03T11:56:50+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2015-03-03:2015/03/l2tpipsec/</id><summary type="html">
&lt;h1 id="l2tpipsec-remoteaccess"&gt;l2tp/ipsec で RemoteAccess&lt;/h1&gt;
&lt;p&gt;VPNゲートウェイを当初VyOSでやろうと思ってたけど、上手くipsec通らず挫折&lt;br/&gt;
それならばと思いCentOS6+openswan+xl2tpでやるも挫折&lt;br/&gt;
行き着いたところが下記の通り。&lt;/p&gt;
&lt;h2 id="_1"&gt;環境&lt;/h2&gt;
&lt;h3 id="_2"&gt;サーバ環境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CentOS 6.6 x86_64&lt;ul&gt;
&lt;li&gt;libreswan-3.12-1.el6.x86_64&lt;/li&gt;
&lt;li&gt;xl2tpd-1.3.6-1.el6.x86_64&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_3"&gt;クライアント環境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iPhone5s(ios 8.1.3)&lt;/li&gt;
&lt;li&gt;Mac OSX 10.10&lt;/li&gt;
&lt;li&gt;Windows 7 64bit &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;構成図&lt;/h3&gt;
&lt;p&gt;l2tp/ipsecサーバとクライアント端末は双方共にNAT配下に居る構成です。
&lt;img alt="ネットワーク図" src="/images/ipsec1.png"/&gt;&lt;/p&gt;
&lt;h2 id="_5"&gt;パッケージインストール&lt;/h2&gt;
&lt;p&gt;epelレポジトリが追加してあること前提です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum -y install libreswan xl2tpd lsof
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="l2tp"&gt;l2tp設定&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;/etc/xl2tpd/xl2tpd.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[global]&lt;/span&gt;
&lt;span class="k"&gt;[lns default]&lt;/span&gt;
&lt;span class="na"&gt;ip range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;192.168.100.128-192.168.100.200&lt;/span&gt;
&lt;span class="na"&gt;local ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;192.168.100.22&lt;/span&gt;
&lt;span class="na"&gt;require chap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;refuse pap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;require authentication&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;LinuxVPNserver&lt;/span&gt;
&lt;span class="na"&gt;ppp debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;pppoptfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/etc/ppp/options.xl2tpd&lt;/span&gt;
&lt;span class="na"&gt;length bit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;/etc/ppp/options.xl2tpd&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;name xl2tpd
linkname l2tp
ipcp-accept-local
ipcp-accept-remote
ms-dns 192.168.100.1
ms-dns 8.8.8.8
noccp
auth
crtscts
idle 1800
mtu 1426
mru 1426
nodefaultroute
debug
lock
proxyarp
connect-delay 5000
netmask 255.255.255.0
persist
require-mschap-v2
logfile /var/log/xl2tpd.log
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;/etc/ppp/chap-secrets&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;"username" * "password" *
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;usernameとpasswordは書き換えてね。&lt;/p&gt;
&lt;h2 id="ipsec"&gt;ipsecの設定&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;/etc/ipsec.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;config setup
    protostack=netkey
    dumpdir=/var/run/pluto/
    nat_traversal=yes
    virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:25.0.0.0/8,%v4:100.64.0.0/10,%v6:fd00::/8,%v6:fe80::/10
include /etc/ipsec.d/*.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;/etc/ipsec.d/ipsec.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;conn L2TP-PSK-NAT
    rightsubnet=0.0.0.0/0
    forceencaps=yes
    also=L2TP-PSK-noNAT

conn L2TP-PSK-noNAT
    dpddelay=10
    dpdtimeout=20
    dpdaction=clear
    authby=secret
    pfs=no
    auto=add
    keyingtries=3
    rekey=no
    ikelifetime=8h
    keylife=1h
    type=transport
    left=%defaultroute
    leftprotoport=17/1701
    right=%any
    rightprotoport=17/%any
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;iOSは切断のシグナルを送らずに切ってくれるので&lt;br/&gt;
以下の設定を/etc/ipsec.d/ipsec.confに入れておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dpddelay=10
dpdtimeout=20
dpdaction=clear
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;シークレットパスワードの設定&lt;br/&gt;
仮でvpnにしてます。
- /etc/ipsec.d/ipsec.secrets&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;: PSK "vpn"
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="_6"&gt;システム設定&lt;/h2&gt;
&lt;p&gt;sysctl.confに下記を追記&lt;br/&gt;
デバイスについては環境に合わせること。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/sysctl.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.eth0.accept_redirects = 0
net.ipv4.conf.lo.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.eth0.send_redirects = 0
net.ipv4.conf.lo.send_redirects = 0

net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.lo.rp_filter = 2
net.ipv4.conf.eth0.rp_filter = 2
net.ipv4.conf.eth1.rp_filter = 2
net.ipv4.conf.all.rp_filter = 2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で、反映する。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sysctl -p
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="os"&gt;OS起動時の自動起動とサービス起動&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chkconfig ipsec on
chkconfig xl2tpd on
service ipsec start
service xl2tpd start
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="iphone"&gt;iPhone側&lt;/h2&gt;
&lt;p&gt;設定 -&amp;gt; 一般 -&amp;gt; VPN -&amp;gt; VPN構成を追加... &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;L2TP&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;説明&lt;/td&gt;
&lt;td&gt;わかりやすい任意の名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;サーバ&lt;/td&gt;
&lt;td&gt;VPNサーバのGlobal-IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;アカウント&lt;/td&gt;
&lt;td&gt;chap-secretsで記載したusername&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RSA SecurID&lt;/td&gt;
&lt;td&gt;オフ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;パスワード&lt;/td&gt;
&lt;td&gt;chap-secretsで記載したpassword&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;シークレット&lt;/td&gt;
&lt;td&gt;default.secretsに記載したシークレットキー&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;すべての暗号を送信&lt;/td&gt;
&lt;td&gt;VPN経由でインターネット通信する場合はオン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;プロキシ&lt;/td&gt;
&lt;td&gt;オフ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary><category term="linux"></category></entry><entry><title>SSL証明書のペアを確認する</title><link href="http://tkr0429.github.io/2014/10/ssl-pair/" rel="alternate"></link><updated>2014-10-17T13:02:15+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-10-16:2014/10/ssl-pair/</id><summary type="html">
&lt;p&gt;SSL証明書の設置作業でどのCRTとKEYがペアだったか分からなくなるので、
以下のコマンドでペアが正しいか確認するメモ&lt;/p&gt;
&lt;p&gt;md5の結果が一致していればペア&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crtの確認&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# openssl x509 -noout -modulus -in server.crt | openssl md5
(stdin)= 880a6ffb3daba7d98abf955003ad2e69
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;keyの確認&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# openssl rsa -noout -modulus -in server.key | openssl md5
(stdin)= 880a6ffb3daba7d98abf955003ad2e69
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;crtの確認&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# openssl req -noout -modulus -in server.csr | openssl md5
(stdin)= 880a6ffb3daba7d98abf955003ad2e69
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;証明書情報を表示させたい場合は以下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# openssl x509 -noout -text -in server.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;期限だけを確認したい場合&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# openssl x509 -in server.crt -noout -dates
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ディスティングイッシュネームを確認したい場合は&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# openssl x509 -in server.crt -noout -subject
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;こんな感じで各情報を確認可能。&lt;/p&gt;</summary><category term="linux"></category></entry><entry><title>CentOS7 デフォルトランレベルの設定</title><link href="http://tkr0429.github.io/2014/10/centos7-runlevel/" rel="alternate"></link><updated>2014-10-07T00:29:32+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-10-07:2014/10/centos7-runlevel/</id><summary type="html">
&lt;p&gt;既存設定の確認&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;systemctl get-default
graphical.target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;multi-userモードを設定する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;systemctl set-default multi-user.target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再度確認&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;systemctl get-default
multi-user.target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでrebootしてCUIで起動することを確認。&lt;/p&gt;</summary><category term="linux"></category></entry><entry><title>CentOS7をDL360G5にインストールメモ</title><link href="http://tkr0429.github.io/2014/10/p400i/" rel="alternate"></link><updated>2014-10-06T19:59:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-10-06:2014/10/p400i/</id><summary type="html">
&lt;h1 id="centos7"&gt;CentOS7のインストール&lt;/h1&gt;
&lt;h2 id="_1"&gt;障壁となった理由&lt;/h2&gt;
&lt;p&gt;HP Prolient DL360G5にCentos7をインストールしようと思ったが、&lt;br/&gt;
RAIDカードが正常に見えないようでDiskが表示されない。&lt;/p&gt;
&lt;h2 id="_2"&gt;インストール&lt;/h2&gt;
&lt;p&gt;起動画面で「Install CentOS 7」を選択した状態で「Tab」を押し&lt;br/&gt;
インストールメディアからのbootオプションで下記を追記&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;hpsa.hpsa_simple_mode=1 hpsa.hpsa_allow_any=1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="boot" src="/images/boot.png"/&gt;&lt;/p&gt;
&lt;p&gt;後は通常通りDiskパーティションを設定したりパッケージを選択したりして終了。&lt;/p&gt;
&lt;h2 id="_3"&gt;インストール後の作業&lt;/h2&gt;
&lt;p&gt;インストールが終わってもデフォルトkernelはCCISSドライバを正常にロードしてくれない。
レスキューモードで再度bootしてGRUB_CMDLINE_LINUXに「hpsa.hpsa_simple_mode=1 hpsa.hpsa_allow_any=1」を
追記する必要があるようです。&lt;/p&gt;
&lt;p&gt;再度インストールメディアでbootさせてrescueモードで起動させます。&lt;/p&gt;
&lt;p&gt;「Trubleshooting」を選択します。&lt;/p&gt;
&lt;p&gt;&lt;img alt="rescue1" src="/images/rescue1.png"/&gt;&lt;/p&gt;
&lt;p&gt;「Rescue a CentOS system」を選択して「Tab」を押します。&lt;/p&gt;
&lt;p&gt;&lt;img alt="rescue2" src="/images/rescue2.png"/&gt;&lt;/p&gt;
&lt;p&gt;「hpsa.hpsa_simple_mode=1 hpsa.hpsa_allow_any=1」を追記して「Enter」を押します。&lt;/p&gt;
&lt;p&gt;&lt;img alt="rescue3" src="/images/rescue3.png"/&gt;&lt;/p&gt;
&lt;p&gt;「Continue」を押します。&lt;/p&gt;
&lt;p&gt;&lt;img alt="rescue4" src="/images/rescue4.png"/&gt;&lt;/p&gt;
&lt;p&gt;「OK」を押します。&lt;/p&gt;
&lt;p&gt;&lt;img alt="rescue5" src="/images/rescue5.png"/&gt;&lt;/p&gt;
&lt;p&gt;「OK」を押します。&lt;/p&gt;
&lt;p&gt;&lt;img alt="rescue5" src="/images/rescue5.png"/&gt;&lt;/p&gt;
&lt;p&gt;ここまで進むとコマンドプロンプトの画面になります。  &lt;/p&gt;
&lt;p&gt;レスキューモードで起動させたら/mnt/sysimageをchrootします。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chroot /mnt/sysimage
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;viで/etc/default/grubを変更します。&lt;br/&gt;
GRUB_CMDLINE_LINUXにhpsaのオプションを追加します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GRUB_CMDLINE_LINUX&lt;br/&gt;
  カーネルのコマンドラインオプションに追加したい場合に指定するためのパラメータです。 &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;GRUB_CMDLINE_LINUX="vconsole.keymap=jp106 crashkernel=auto vconsole.font=latarcyrheb-sun16 rhgb quiet"
↓
GRUB_CMDLINE_LINUX="vconsole.keymap=jp106 crashkernel=auto vconsole.font=latarcyrheb-sun16 rhgb quiet hpsa.hpsa_simple_mode=1 hpsa.hpsa_allow_any=1"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;grub2-mkconfigでgrub.confを生成します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;grub2-mkconfig -o /boot/grub2/grub.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;※参考URL
- &lt;a href="http://serverfault.com/questions/611182/centos-7-x64-and-hp-proliant-dl360-g5-scsi-controller-compatibility"&gt;StackOverflow&lt;/a&gt;&lt;/p&gt;</summary><category term="linux"></category></entry><entry><title>bashの脆弱性</title><link href="http://tkr0429.github.io/2014/09/shellshock/" rel="alternate"></link><updated>2014-09-30T13:35:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-09-30:2014/09/shellshock/</id><summary type="html">
&lt;h1 id="bash"&gt;bashの脆弱性&lt;/h1&gt;
&lt;p&gt;既に色々な方がblogに掲載していますが、&lt;br/&gt;
今回発見されたbashのバグについて感想を書きます。&lt;/p&gt;
&lt;h2 id="_1"&gt;脆弱性の確認&lt;/h2&gt;
&lt;p&gt;下記のコマンドを実行した際に[vulnerable]が表示される場合は本脆弱性の対象です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# env x='() { :;}; echo vulnerable' bash -c "echo this is a test"
vulnerable
this is a test
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;既に対策済みであれば下記の様にエラー出力や、[this is a test]のみの出力になるかと思います。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'() { :;}; echo vulnerable'&lt;/span&gt; &lt;span class="nx"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="s2"&gt;"echo this is a test"&lt;/span&gt;
&lt;span class="nx"&gt;bash&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ignoring&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;definition&lt;/span&gt; &lt;span class="nx"&gt;attempt&lt;/span&gt;
&lt;span class="nx"&gt;bash&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="nx"&gt;importing&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;definition&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="_2"&gt;対応方法&lt;/h2&gt;
&lt;p&gt;殆どの各ディストリビューションのupdateにて既に対策済みパッケージが配布されています。&lt;/p&gt;
&lt;p&gt;例えばCentOSであれば下記の方法にて対応可能です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lists.centos.org/pipermail/centos-announce/2014-September/020591.html"&gt;CentOS 5&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lists.centos.org/pipermail/centos-announce/2014-September/020593.html"&gt;CentOS 6&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://lists.centos.org/pipermail/centos-announce/2014-September/020592.html"&gt;CentOS 7&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;影響は少ないと言っていたAppleでも既に対応パッケージがダウンロード出来る&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://support.apple.com/kb/DL1767"&gt;Lion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://support.apple.com/kb/DL1768"&gt;Mountain Lion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://support.apple.com/kb/DL1769"&gt;Mavericks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また、色々な大人の事情でupdateを適用出来ない場合などは下記を実施しておいた方が良いでしょう。&lt;/p&gt;
&lt;p&gt;ダウンロード: &lt;a href="https://access.redhat.com/sites/default/files/attachments/bash_ld_preload.c"&gt;bash_ld_preload.c&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://access.redhat.com/sites/default/files/attachments/bash_ld_preload.c
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;チェックサムの確認&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sha256sum bash_ld_preload.c
28cb0ab767a95dc2f50a515106f6a9be0f4167f9e5dbc47db9b7788798eef153 bash_ld_preload.c
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;コンパイル&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gcc bash_ld_preload.c -fPIC -shared -Wl,-soname,bash_ld_preload.so.1 -o bash_ld_preload.so
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;コンパイル済みライブラリの配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# cp bash_ld_preload.so /lib/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ld.so.preloadファイルの作成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# vi /etc/ld.so.preload
/lib/bash_ld_preload.so
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ライブラリの再読み込み&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# ldconfig
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apacheの再起動&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# service httpd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可能であればOS再起動するのが望ましいと思います。&lt;/p&gt;
&lt;h1 id="msp"&gt;MSPとしての対応&lt;/h1&gt;
&lt;p&gt;OpenSSLで発見されたHeartbleedの問題もそうでしたが、意識の薄い人は対応しない。&lt;br/&gt;
bashのshellshockについても同様で、脆弱性を残したまま放置されるサーバが多いのだろうなと思います。&lt;/p&gt;
&lt;p&gt;サービス事業者であれば最低限、注意発起文を掲載するなどの対応が必要だと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「何も情報を掲載しない」= ここのサービスは該当しない。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;と認識している顧客も多いと思う。&lt;/p&gt;
&lt;p&gt;MSP事業主自体あまり今回の問題の重大性を理解していない。&lt;br/&gt;
インフラしか見ていない様なところで「sshログイン出来ないなら影響ないね！」なんて言ってる人も居て呆れる。&lt;/p&gt;
&lt;p&gt;リモートでコマンド実行出来ちゃうから厄介で、
更に潜在的なバグなどがあれば簡単にrootを奪取することも可能なのに。&lt;/p&gt;</summary><category term="linux"></category><category term="bash"></category></entry><entry><title>GlusterFSのインストール</title><link href="http://tkr0429.github.io/2014/09/glusterfs1/" rel="alternate"></link><updated>2014-09-16T14:00:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-09-16:2014/09/glusterfs1/</id><summary type="html">
&lt;h1 id="glusterfs"&gt;glusterfsのインストール&lt;/h1&gt;
&lt;p&gt;glusterfsのインストール覚書です。&lt;/p&gt;
&lt;h2 id="_1"&gt;事前作業&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;レポジトリの追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;glusterfsのレポジトリを追加します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# curl -Ls http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/glusterfs-epel.repo &amp;gt; /etc/yum.repos.d/glusterfs-epel.repo
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;パッケージのインストール&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;yumコマンドで各種パッケージをインストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# yum -y install glusterfs-server \
                 glusterfs-libs \
                 glusterfs-api \
                 glusterfs-extra-xlators \
                 glusterfs-fuse \
                 glusterfs-geo-replication \
                 glusterfs-rdma \
                 glusterfs-resource-agents \
                 glusterfs-cli \
                 xfsprogs
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;パーティション作成&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;glusterfsのbrickを作成するための領域をOS領域とは別にパーティションを作ります。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# fdisk /dev/sda
コマンド (m でヘルプ): n
コマンドアクション
   e   拡張
   p   基本パーティション (1-4)
p
パーティション番号 (1-4): 4
最初 シリンダ (1-652, 初期値 1):
初期値 1 を使います
Last シリンダ, +シリンダ数 or +size{K,M,G} (1-652, 初期値 652):
初期値 652 を使います

コマンド (m でヘルプ): w
パーティションテーブルは変更されました！

ioctl() を呼び出してパーティションテーブルを再読込みします。
ディスクを同期しています。
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;xfsでフォーマット&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# mkfs.xfs -f -i size=512 /dev/sda3
meta-data=/dev/sda3              isize=512    agcount=4, agsize=622878 blks
         =                       sectsz=512   attr=2, projid32bit=0
data     =                       bsize=4096   blocks=2491510, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0
log      =internal log           bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;マウント先ディレクトリの作成&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# mkdir -p /gfs/brick01
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;fstab への記載
起動時に自動マウントされるようにfstabにマウント設定を記載します。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# cat &amp;lt;&amp;lt; EOF &amp;gt;&amp;gt; /etc/fstab
/dev/sda3       /gfs/brick01        xfs defaults    0 0
EOF
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="glusterfs_1"&gt;GlusterFSの設定&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;サービスの起動&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# service glusterd start
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Peerの設定&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# gluster peer probe vm02
peer probe: success.
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;GlusterFSボリュームの作成&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# gluster vol create vol01 \
          replica 2 \
          vm01:/gfs/brick01/vol01 \
          vm02:/gfs/brick01/vol01
volume create: vol01: success: please start the volume to access data
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;volumeの開始&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# gluster vol start vol01
volume start: vol01: success
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="_2"&gt;チューニング&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GlusterFSチューニング&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# gluster vol set vol01 performance.cache-size 8GB
# gluster vol set vol01 performance.cache-max-file-size 100MB
# gluster vol set vol01 performance.cache-min-file-size 1KB
# gluster vol set vol01 performance.cache-refresh-timeout 1
# gluster vol set vol01 performance.io-thread-count 32
# gluster vol set vol01 performance.flush-behind On
# gluster vol set vol01 performance.write-behind-window-size 5MB
# gluster vol set vol01 network.frame-timeout 1800
# gluster vol set vol01 network.ping-timeout 30
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Kernelチューニング&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# vi /etc/rc.local&lt;/span&gt;
sysctl -w vm.swappiness&lt;span class="o"&gt;=&lt;/span&gt;10&lt;span class="p"&gt;;&lt;/span&gt;
sysctl -w vm.dirty_background_ratio&lt;span class="o"&gt;=&lt;/span&gt;1&lt;span class="p"&gt;;&lt;/span&gt;
sysctl -w kernel.sched_wakeup_granularity_ns&lt;span class="o"&gt;=&lt;/span&gt;15
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="k"&gt;$(&lt;/span&gt;ls -d /sys/block/*/queue/iosched 2&amp;gt;/dev/null&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nv"&gt;iosched_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;'/iosched/ {print $1}'&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="nv"&gt;$iosched_dir&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="nv"&gt;$iosched_dir&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$path&lt;/span&gt;/scheduler &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"deadline"&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$path&lt;/span&gt;/scheduler
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$path&lt;/span&gt;/nr_requests &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"256"&lt;/span&gt; &amp;gt; &lt;span class="nv"&gt;$path&lt;/span&gt;/nr_requests
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="_3"&gt;各種確認&lt;/h2&gt;
&lt;h3 id="_4"&gt;確認関係&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;peerの確認  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gluster peer status
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;ボリュームのステータス確認  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gluster vol status vol01 
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;ボリュームの設定確認  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gluster vol info vol01
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;リバランスの確認  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gluster vol rebalance vol01 status
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="brick"&gt;brick操作関係&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;brickの追加  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gluster vol add-brick vol01 &lt;span class="se"&gt;\&lt;/span&gt;
replica &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
vm03:/gfs/brick02/vol01 &lt;span class="se"&gt;\&lt;/span&gt;
vm04:/gfs/brick02/vol01
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;リバランス&lt;br/&gt;
  これを実行しないとbrick追加しても新規配置されないっぽい。  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;gluster vol rebalance vol01 start
&lt;/pre&gt;&lt;/div&gt;</summary><category term="glusterfs"></category></entry><entry><title>Ansible で su</title><link href="http://tkr0429.github.io/2014/09/ansible-su/" rel="alternate"></link><updated>2014-09-12T18:00:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-09-12:2014/09/ansible-su/</id><summary type="html">
&lt;h1 id="ansible-su"&gt;Ansible で su&lt;/h1&gt;
&lt;p&gt;ansibleでsu使うと&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;su   
パスワード:  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;的な感じで日本語表記だと固まってしまう。&lt;br/&gt;
どうしたものかと考えた結果,リモートユーザのホームディレクトリに.i18nファイルを
作っちゃうのが手っ取り早いとなったので、
playbookに処理を追加。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;shell&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"echo&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;LANG=C&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;~/.i18n"&lt;/span&gt;  
  &lt;span class="l-Scalar-Plain"&gt;register&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;result&lt;/span&gt;  
  &lt;span class="l-Scalar-Plain"&gt;changed_when&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;result.rc != 0&lt;/span&gt;  
  &lt;span class="l-Scalar-Plain"&gt;su&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;毎回chengedになっちゃうのも煩わしいのでchecnged_when使って回避&lt;/p&gt;</summary><category term="python"></category><category term="ansible"></category></entry><entry><title>ansibleでパスワード認証&amp;suでのroot実行</title><link href="http://tkr0429.github.io/2014/09/ansible-pass-and-suroot/" rel="alternate"></link><updated>2014-09-08T20:00:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-09-08:2014/09/ansible-pass-and-suroot/</id><summary type="html">
&lt;h2 id="_1"&gt;概要&lt;/h2&gt;
&lt;p&gt;パスワード認証ありのサーバに接続する必要があり、
且つ踏み台（こちらもパスワード認証）を越える必要があった。&lt;/p&gt;
&lt;p&gt;この時の作業メモ&lt;/p&gt;
&lt;h2 id="_2"&gt;前準備&lt;/h2&gt;
&lt;p&gt;パスワード認証を通るためには
sshpassが必要なので入れておく。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum -y install --enablerepo&lt;span class="o"&gt;=&lt;/span&gt;epel sshpass
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ansible.cfgを使って回避する。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[ssh_connection]&lt;/span&gt;
&lt;span class="na"&gt;scp_if_ssh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# 下記に記載の&amp;lt;gateway-server&amp;gt;を踏み台サーバIPに書き換えてください.&lt;/span&gt;
&lt;span class="na"&gt;ssh_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;-o ProxyCommand='sshpass -f passfile ssh -l %r &amp;lt;gateway-server&amp;gt; -W %h:%p'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;passfileにsshログインパスワードを書いておく  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;loginpasswd
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="playbook"&gt;playbookの作成&lt;/h2&gt;
&lt;p&gt;プレイブックの中身&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;all&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;gather_facts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;False&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;su&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;True&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;remote_user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;loginuser&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;su_user&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;root&lt;/span&gt;

  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;command whoami&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;command&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;whoami&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;register&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;result&lt;/span&gt;

    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;debug&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;msg={{result.stdout}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="_3"&gt;実行&lt;/h2&gt;
&lt;p&gt;ansible実行時に頭にLANG=Cを付けないと固まる。
環境によってはLANG=Cつけようが固まる。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C ansible-playbook -i host site.yml -k --ask-su-pass
SSH password:
su password:

PLAY &lt;span class="o"&gt;[&lt;/span&gt;all&lt;span class="o"&gt;]&lt;/span&gt; ********************************************************************

TASK: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;command &lt;/span&gt;whoami&lt;span class="o"&gt;]&lt;/span&gt; ********************************************************
changed: &lt;span class="o"&gt;[&lt;/span&gt;client1&lt;span class="o"&gt;]&lt;/span&gt;

TASK: &lt;span class="o"&gt;[&lt;/span&gt;debug &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;={{&lt;/span&gt;result.stdout&lt;span class="o"&gt;}}]&lt;/span&gt; *******************************************
ok: &lt;span class="o"&gt;[&lt;/span&gt;clinet1&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="s2"&gt;"msg"&lt;/span&gt;: &lt;span class="s2"&gt;"root"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

PLAY RECAP ********************************************************************
client1                      : &lt;span class="nv"&gt;ok&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="nv"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="nv"&gt;unreachable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="nv"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;</summary><category term="ansible"></category><category term="python"></category></entry><entry><title>YAPC::Asia 2014 Tokyoに行った話</title><link href="http://tkr0429.github.io/2014/09/yapc-asia/" rel="alternate"></link><updated>2014-09-08T17:00:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-09-08:2014/09/yapc-asia/</id><summary type="html">
&lt;h1 id="yapcasia-2014-tokyo"&gt;YAPC:Asia 2014 Tokyo&lt;/h1&gt;
&lt;p&gt;今年はじめてYAPC:Asiaに@laugh_kさんの誘いで行って来ました。&lt;br/&gt;
0日目の前夜祭には仕事で残念ながら参加出来なかった。  &lt;/p&gt;
&lt;p&gt;まず最初に感想から書いてしまうと、&lt;br/&gt;
何故もっと早くにこんなイベントに参加しなかったんだ。。。&lt;br/&gt;
と後悔すら覚える程、衝撃を受けました。  &lt;/p&gt;
&lt;h2 id="1"&gt;1日目&lt;/h2&gt;
&lt;p&gt;色々なセッションをふらふらと見ていたが、
自分がインフラ系のエンジニアをやらせてもらっていることもあり、
それに関連するセッションを選んで聞いていた。
なかでも@studio3104さん の&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;「インフラエンジニア(狭義)は死んだ」&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;にはグサリと刺さる物を感じた。&lt;/p&gt;
&lt;p&gt;自分の現状を言われているようで、苦しく思う部分が多く
改めてコードを読み書きが出来るか否かの重要性を強く感じた。&lt;/p&gt;
&lt;h2 id="2"&gt;2日目&lt;/h2&gt;
&lt;p&gt;せっかくのperlのイベントなのでperlに触れたくなり飛び入りで&lt;br/&gt;
&lt;strong&gt;「Perl入学式 in YAPC::Asia Tokyo 2014」&lt;/strong&gt;&lt;br/&gt;
に参加してきた。  &lt;/p&gt;
&lt;p&gt;perlでbotシステムを作成するまでを学習してきたが、&lt;br/&gt;
講師の方々の熱い説明と各グループに一人ついてくれていたので&lt;br/&gt;
戸惑うことも少なくスムーズに受講する事が出来た。  &lt;/p&gt;
&lt;p&gt;なんと無くperlってあまり好きじゃないと思ってたけど、&lt;br/&gt;
完全に自分の食わず嫌いで、やってみたら面白かった。&lt;br/&gt;
今までなんでもシェルスクリプト or Pythonでやろうとしてたけど、 
1日目のセッションで見た@kentaroさんの  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;「いろんな言語を適材適所で使おう」&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;とはこういうことなんだなぁーと言うのを感じた。  &lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;LTも「TDD(Twitter Driven Datsu-Syoshinsya) / Twitter駆動脱初心者」が面白かった
@typestarさんのキーノートに関してはアウトプットの必要性やエンジニアとしての生き方を考えさせられた。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="_1"&gt;最後に&lt;/h2&gt;
&lt;p&gt;YAPC:Asiaは参加するまでperlのイベントってイメージが強かったんですが、&lt;br/&gt;
perlに限らずともIT系エンジニアであれば誰でも楽しめる内容だったと思います。&lt;br/&gt;
来年も是非参加したいと思える濃い内容で大変満足でした。&lt;/p&gt;</summary><category term="perl"></category></entry><entry><title>ブログはじめます。</title><link href="http://tkr0429.github.io/2014/09/first-post/" rel="alternate"></link><updated>2014-09-08T13:00:00+09:00</updated><author><name>tkr0429</name></author><id>tag:tkr0429.github.io,2014-09-08:2014/09/first-post/</id><summary type="html">&lt;p&gt;ブログはじめます。&lt;/p&gt;
&lt;p&gt;pelicanって物を知ったのでブログ始めようかと思います。&lt;br /&gt;
大した事は書けないけど、技術メモ的な感じで使って行こうかと思います。&lt;/p&gt;</summary><category term="python"></category></entry></feed>